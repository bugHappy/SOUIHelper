<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="_s_float_bits_8h" kind="file" language="C++">
    <compoundname>SFloatBits.h</compoundname>
    <includes refid="stdint_8h" local="no">stdint.h</includes>
    <incdepgraph>
      <node id="2">
        <label>stdint.h</label>
        <link refid="stdint_8h_source"/>
      </node>
      <node id="1">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/matrix/SFloatBits.h</label>
        <link refid="_s_float_bits_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="union_s_o_u_i_1_1_sk_float_int_union" prot="public">SOUI::SkFloatIntUnion</innerclass>
    <innernamespace refid="namespace_s_o_u_i">SOUI</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="_s_float_bits_8h_1a7dbf4ab0c1c64bd4b0fa24390dd9621b" prot="public" static="no">
        <name>SFloatAs2sCompliment</name>
        <param><defname>x</defname></param>
        <initializer>SkFloatAs2sCompliment(x)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="H:/OpenSourcesCode/soui3/SOUI/include/matrix/SFloatBits.h" line="71" column="9" bodyfile="H:/OpenSourcesCode/soui3/SOUI/include/matrix/SFloatBits.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_float_bits_8h_1a806e863e38958294c7a95589b2ce5493" prot="public" static="no">
        <name>Sk2sComplimentAsScalar</name>
        <param><defname>x</defname></param>
        <initializer>Sk2sComplimentAsFloat(x)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="H:/OpenSourcesCode/soui3/SOUI/include/matrix/SFloatBits.h" line="72" column="9" bodyfile="H:/OpenSourcesCode/soui3/SOUI/include/matrix/SFloatBits.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2008<sp/>The<sp/>Android<sp/>Open<sp/>Source<sp/>Project</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Use<sp/>of<sp/>this<sp/>source<sp/>code<sp/>is<sp/>governed<sp/>by<sp/>a<sp/>BSD-style<sp/>license<sp/>that<sp/>can<sp/>be</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>found<sp/>in<sp/>the<sp/>LICENSE<sp/>file.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_SFloatBits_DEFINED_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SFloatBits_DEFINED_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_s_o_u_i" kindref="compound">SOUI</ref>{</highlight></codeline>
<codeline lineno="20"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/>SkSignBitTo2sCompliment(int32_t<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>&amp;=<sp/>0x7FFFFFFF;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>-x;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/>Sk2sComplimentToSignBit(int32_t<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sign<sp/>=<sp/>x<sp/>&gt;&gt;<sp/>31;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>x<sp/>positive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>(x<sp/>^<sp/>sign)<sp/>-<sp/>sign;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>sign<sp/>bit<sp/>as<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>|=<sp/>sign<sp/>&lt;&lt;<sp/>31;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="union_s_o_u_i_1_1_sk_float_int_union" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal"><ref refid="union_s_o_u_i_1_1_sk_float_int_union" kindref="compound">SkFloatIntUnion</ref><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>fFloat;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>fSignBitInt;</highlight></codeline>
<codeline lineno="44"><highlight class="normal">};</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>to<sp/>see<sp/>a<sp/>float<sp/>as<sp/>its<sp/>bit<sp/>pattern<sp/>(w/o<sp/>aliasing<sp/>warnings)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/>SkFloat2Bits(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="union_s_o_u_i_1_1_sk_float_int_union" kindref="compound">SkFloatIntUnion</ref><sp/>data;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>data.fFloat<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data.fSignBitInt;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>to<sp/>see<sp/>a<sp/>bit<sp/>pattern<sp/>as<sp/>a<sp/>float<sp/>(w/o<sp/>aliasing<sp/>warnings)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>SkBits2Float(int32_t<sp/>floatAsBits)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>SkFloatIntUnion<sp/>data;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>data.fSignBitInt<sp/>=<sp/>floatAsBits;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data.fFloat;</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/>SkFloatAs2sCompliment(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SkSignBitTo2sCompliment(SkFloat2Bits(x));</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Scalar<sp/>wrappers<sp/>for<sp/>float-bit<sp/>routines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SFloatAs2sCompliment(x)<sp/><sp/><sp/><sp/>SkFloatAs2sCompliment(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Sk2sComplimentAsScalar(x)<sp/><sp/><sp/><sp/>Sk2sComplimentAsFloat(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight><highlight class="comment">//end<sp/>of<sp/>namespace<sp/>SOUI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="H:/OpenSourcesCode/soui3/SOUI/include/matrix/SFloatBits.h"/>
  </compounddef>
</doxygen>
