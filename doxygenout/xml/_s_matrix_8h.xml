<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="_s_matrix_8h" kind="file" language="C++">
    <compoundname>SMatrix.h</compoundname>
    <includes refid="_s_rect_8h" local="yes">SRect.h</includes>
    <includes refid="_s_render-i_8h" local="no">interface/SRender-i.h</includes>
    <includedby refid="_s_transformation_8h" local="no">H:/OpenSourcesCode/soui3/SOUI/include/animation/STransformation.h</includedby>
    <includedby refid="_s_camera_8h" local="yes">H:/OpenSourcesCode/soui3/SOUI/include/matrix/SCamera.h</includedby>
    <incdepgraph>
      <node id="11">
        <label>stdint.h</label>
        <link refid="stdint_8h_source"/>
      </node>
      <node id="8">
        <label>SImgDecoder-i.h</label>
        <link refid="_s_img_decoder-i_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>matrix/SFloat.h</label>
        <link refid="_s_float_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>sobject/Sobject.hpp</label>
      </node>
      <node id="1">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/matrix/SMatrix.h</label>
        <link refid="_s_matrix_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>SRect.h</label>
        <link refid="_s_rect_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>unknown/obj-ref-i.h</label>
      </node>
      <node id="6">
        <label>core/sobjType.h</label>
        <link refid="_s_obj_type_8h_source"/>
      </node>
      <node id="9">
        <label>SPathEffect-i.h</label>
        <link refid="_s_path_effect-i_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>math.h</label>
      </node>
      <node id="4">
        <label>interface/SRender-i.h</label>
        <link refid="_s_render-i_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>SPoint.h</label>
        <link refid="_s_point_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="29">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/control/SSpinButtonCtrl.h</label>
        <link refid="_s_spin_button_ctrl_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/helper/STimerEx.h</label>
        <link refid="_s_timer_ex_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/control/SSliderBar.h</label>
        <link refid="_s_slider_bar_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/control/SRealWnd.h</label>
        <link refid="_s_real_wnd_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/res.mgr/SFontPool.h</label>
        <link refid="_s_font_pool_8h"/>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/matrix/SCamera.h</label>
        <link refid="_s_camera_8h_source"/>
      </node>
      <node id="11">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/control/SouiCtrls.h</label>
        <link refid="_soui_ctrls_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/core/SHostDialog.h</label>
        <link refid="_s_host_dialog_8h"/>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/control/SDropDown.h</label>
        <link refid="_s_drop_down_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/control/SScrollbar.h</label>
        <link refid="_s_scrollbar_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/core/SSingleton2.h</label>
        <link refid="_s_singleton2_8h_source"/>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/core/SSingletonMap.h</label>
        <link refid="_s_singleton_map_8h_source"/>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/core/SHostWnd.h</label>
        <link refid="_s_host_wnd_8h_source"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/res.mgr/SSkinPool.h</label>
        <link refid="_s_skin_pool_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/control/SCalendar.h</label>
        <link refid="_s_calendar_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/control/STabCtrl.h</label>
        <link refid="_s_tab_ctrl_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/control/SListCtrl.h</label>
        <link refid="_s_list_ctrl_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/res.mgr/SStylePool.h</label>
        <link refid="_s_style_pool_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/control/SActiveX.h</label>
        <link refid="_s_active_x_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/core/SWindowMgr.h</label>
        <link refid="_s_window_mgr_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/control/STreeCtrl.h</label>
        <link refid="_s_tree_ctrl_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/interface/SAnimation-i.h</label>
        <link refid="_s_animation-i_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/control/STileView.h</label>
        <link refid="_s_tile_view_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/helper/SMenuEx.h</label>
        <link refid="_s_menu_ex_8h_source"/>
      </node>
      <node id="8">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/animation/STranslateAnimation.h</label>
        <link refid="_s_translate_animation_8h_source"/>
      </node>
      <node id="19">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/control/SComboView.h</label>
        <link refid="_s_combo_view_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/core/SSkinObjBase.h</label>
        <link refid="_s_skin_obj_base_8h_source"/>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/animation/SRotateAnimation.h</label>
        <link refid="_s_rotate_animation_8h_source"/>
      </node>
      <node id="2">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/animation/STransformation.h</label>
        <link refid="_s_transformation_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/res.mgr/SObjDefAttr.h</label>
        <link refid="_s_obj_def_attr_8h_source"/>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/helper/SMenu.h</label>
        <link refid="_s_menu_8h_source"/>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/core/SWnd.h</label>
        <link refid="_s_wnd_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/core/SWndAccessible.h</label>
        <link refid="_s_wnd_accessible_8h_source"/>
      </node>
      <node id="41">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/core/SWndContainer-i.h</label>
        <link refid="_s_wnd_container-i_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/matrix/SMatrix.h</label>
        <link refid="_s_matrix_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/core/SSkin.h</label>
        <link refid="_s_skin_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/helper/SwndFinder.h</label>
        <link refid="_swnd_finder_8h_source"/>
      </node>
      <node id="6">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/animation/ScaleAnimation.h</label>
        <link refid="_scale_animation_8h_source"/>
      </node>
      <node id="36">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/control/SMessageBox.h</label>
        <link refid="_s_message_box_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/control/SComboBox.h</label>
        <link refid="_s_combo_box_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/control/SHotKeyCtrl.h</label>
        <link refid="_s_hot_key_ctrl_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/res.mgr/SResProviderMgr.h</label>
        <link refid="_s_res_provider_mgr_8h_source"/>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/control/SCaption.h</label>
        <link refid="_s_caption_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/core/SObjectFactory.h</label>
        <link refid="_s_object_factory_8h_source"/>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/core/SFocusManager.h</label>
        <link refid="_s_focus_manager_8h_source"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/helper/STaskHandler.h</label>
        <link refid="_s_task_handler_8h_source"/>
      </node>
      <node id="12">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/souistd.h</label>
        <link refid="souistd_8h_source"/>
      </node>
      <node id="23">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/control/SMCListView.h</label>
        <link refid="_s_m_c_list_view_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/SApp.h</label>
        <link refid="_s_app_8h_source"/>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/helper/SDragWnd.h</label>
        <link refid="_s_drag_wnd_8h_source"/>
      </node>
      <node id="27">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/control/SSplitWnd.h</label>
        <link refid="_s_split_wnd_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/control/SListbox.h</label>
        <link refid="_s_listbox_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/control/STreeView.h</label>
        <link refid="_s_tree_view_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/core/SItemPanel.h</label>
        <link refid="_s_item_panel_8h_source"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/animation/SAlphaAnimation.h</label>
        <link refid="_s_alpha_animation_8h_source"/>
      </node>
      <node id="46">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/control/SRichEdit.h</label>
        <link refid="_s_rich_edit_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/control/SCmnCtrl.h</label>
        <link refid="_s_cmn_ctrl_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/animation/SAnimation.h</label>
        <link refid="_s_animation_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/interface/SValueAnimator-i.h</label>
        <link refid="_s_value_animator-i_8h_source"/>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/helper/SHostMgr.h</label>
        <link refid="_s_host_mgr_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/core/SPanel.h</label>
        <link refid="_s_panel_8h"/>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/helper/SToolTip.h</label>
        <link refid="_s_tool_tip_8h_source"/>
      </node>
      <node id="53">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/core/SNativeWnd.h</label>
        <link refid="_s_native_wnd_8h_source"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/helper/SScriptTimer.h</label>
        <link refid="_s_script_timer_8h_source"/>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/res.mgr/SUiDef.h</label>
        <link refid="_s_ui_def_8h_source"/>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/control/SMenuBar.h</label>
        <link refid="_s_menu_bar_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/control/SHeaderCtrl.h</label>
        <link refid="_s_header_ctrl_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/core/SDropTargetDispatcher.h</label>
        <link refid="_s_drop_target_dispatcher_8h"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/control/SComboBase.h</label>
        <link refid="_s_combo_base_8h_source"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/animation/SAnimationSet.h</label>
        <link refid="_s_animation_set_8h_source"/>
      </node>
      <node id="38">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/core/SWndContainerImpl.h</label>
        <link refid="_s_wnd_container_impl_8h"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/control/SDateTimePicker.h</label>
        <link refid="_s_date_time_picker_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>H:/OpenSourcesCode/soui3/SOUI/include/control/SListView.h</label>
        <link refid="_s_list_view_8h_source"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_s_o_u_i_1_1_s_matrix" prot="public">SOUI::SMatrix</innerclass>
    <innernamespace refid="namespace_s_o_u_i">SOUI</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="_s_matrix_8h_1a2603403620bcafbc5dc20000c8d08e10" prot="public" static="no">
        <name>SToBool</name>
        <param><defname>cond</defname></param>
        <initializer>((cond) != 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="H:/OpenSourcesCode/soui3/SOUI/include/matrix/SMatrix.h" line="16" column="10" bodyfile="H:/OpenSourcesCode/soui3/SOUI/include/matrix/SMatrix.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2006<sp/>The<sp/>Android<sp/>Open<sp/>Source<sp/>Project</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Use<sp/>of<sp/>this<sp/>source<sp/>code<sp/>is<sp/>governed<sp/>by<sp/>a<sp/>BSD-style<sp/>license<sp/>that<sp/>can<sp/>be</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>found<sp/>in<sp/>the<sp/>LICENSE<sp/>file.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_SMatrix_DEFINED_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SMatrix_DEFINED_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SRect.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;interface/SRender-i.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SToBool(cond)<sp/><sp/>((cond)<sp/>!=<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_s_o_u_i" kindref="compound">SOUI</ref>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="class_s_o_u_i_1_1_s_matrix" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">SOUI_EXP<sp/><ref refid="class_s_o_u_i_1_1_s_matrix" kindref="compound">SMatrix</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_s_o_u_i_1_1_ix_form" kindref="compound">IxForm</ref>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_o_u_i_1_1_s_matrix" kindref="compound">SMatrix</ref>(){</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reset();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_o_u_i_1_1_s_matrix" kindref="compound">SMatrix</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>data[9]);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>GetValue(Index<sp/>idx)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/>GetData()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/>GetData();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetValue(Index<sp/>idx,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetData(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fMat[9]);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_o_u_i_1_1_s_matrix" kindref="compound">SMatrix</ref><sp/>&amp;operator*=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_o_u_i_1_1_s_matrix" kindref="compound">SMatrix</ref><sp/>&amp;src);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_o_u_i_1_1_s_matrix" kindref="compound">SMatrix</ref><sp/>operator*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_o_u_i_1_1_s_matrix" kindref="compound">SMatrix</ref><sp/>&amp;src)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_o_u_i_1_1_s_matrix" kindref="compound">SMatrix</ref><sp/>&amp;operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_o_u_i_1_1_s_matrix" kindref="compound">SMatrix</ref><sp/>&amp;src);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator==(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_o_u_i_1_1_s_matrix" kindref="compound">SMatrix</ref>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_o_u_i_1_1_s_matrix" kindref="compound">SMatrix</ref>&amp;<sp/>b);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator!=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_o_u_i_1_1_s_matrix" kindref="compound">SMatrix</ref>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_o_u_i_1_1_s_matrix" kindref="compound">SMatrix</ref>&amp;<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(a<sp/>==<sp/>b);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_o_u_i_1_1_s_matrix" kindref="compound">SMatrix</ref><sp/>&amp;<sp/>translate(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dx,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dy)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>postTranslate(dx,<sp/>dy);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_o_u_i_1_1_s_matrix" kindref="compound">SMatrix</ref><sp/>&amp;<sp/>scale(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sx,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sy)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>postScale(sx,<sp/>sy);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_o_u_i_1_1_s_matrix" kindref="compound">SMatrix</ref><sp/>&amp;<sp/>shear(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sh,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sv)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>postSkew(sh,<sp/>sv);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_o_u_i_1_1_s_matrix" kindref="compound">SMatrix</ref><sp/>&amp;<sp/>rotate(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>deg)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>postRotate(deg);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="86" refid="class_s_o_u_i_1_1_s_matrix_1a5fc8dc190657cb1b73adad1b8d4b2bb4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="class_s_o_u_i_1_1_s_matrix_1a5fc8dc190657cb1b73adad1b8d4b2bb4" kindref="member">TypeMask</ref><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kIdentity_Mask<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="88" refid="class_s_o_u_i_1_1_s_matrix_1a5fc8dc190657cb1b73adad1b8d4b2bb4aac26b1df81f490add11b2158212914d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kTranslate_Mask<sp/><sp/><sp/><sp/><sp/>=<sp/>0x01,<sp/><sp/></highlight></codeline>
<codeline lineno="89" refid="class_s_o_u_i_1_1_s_matrix_1a5fc8dc190657cb1b73adad1b8d4b2bb4a7264ce400f15a22ecb0cff014ea886f1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kScale_Mask<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x02,<sp/><sp/></highlight></codeline>
<codeline lineno="90" refid="class_s_o_u_i_1_1_s_matrix_1a5fc8dc190657cb1b73adad1b8d4b2bb4a66ca838415e9989a82badee44dcdd112" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kAffine_Mask<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x04,<sp/><sp/></highlight></codeline>
<codeline lineno="91" refid="class_s_o_u_i_1_1_s_matrix_1a5fc8dc190657cb1b73adad1b8d4b2bb4a77941b67d3a6cd52407288a5edfd8bad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kPerspective_Mask<sp/><sp/><sp/>=<sp/>0x08<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="class_s_o_u_i_1_1_s_matrix_1a919035e36241e500ecec17fe5f57eb74" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_o_u_i_1_1_s_matrix_1a5fc8dc190657cb1b73adad1b8d4b2bb4" kindref="member">TypeMask</ref><sp/><ref refid="class_s_o_u_i_1_1_s_matrix_1a919035e36241e500ecec17fe5f57eb74" kindref="member">getType</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fTypeMask<sp/>&amp;<sp/>kUnknown_Mask)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fTypeMask<sp/>=<sp/>this-&gt;computeTypeMask();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>return<sp/>the<sp/>public<sp/>masks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_s_o_u_i_1_1_s_matrix_1a5fc8dc190657cb1b73adad1b8d4b2bb4" kindref="member">TypeMask</ref>)(fTypeMask<sp/>&amp;<sp/>0xF);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="class_s_o_u_i_1_1_s_matrix_1a84ed389baefdecb2b9e720e7daf88529" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_s_o_u_i_1_1_s_matrix_1a84ed389baefdecb2b9e720e7daf88529" kindref="member">isIdentity</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;getType()<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isScaleTranslate()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(this-&gt;getType()<sp/>&amp;<sp/>~(kScale_Mask<sp/>|<sp/>kTranslate_Mask));</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="class_s_o_u_i_1_1_s_matrix_1a547f516582abdb1e92634c3aa3433d61" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_s_o_u_i_1_1_s_matrix_1a547f516582abdb1e92634c3aa3433d61" kindref="member">rectStaysRect</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fTypeMask<sp/>&amp;<sp/>kUnknown_Mask)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fTypeMask<sp/>=<sp/>this-&gt;computeTypeMask();</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(fTypeMask<sp/>&amp;<sp/>kRectStaysRect_Mask)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>alias<sp/>for<sp/>rectStaysRect()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>preservesAxisAlignment()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;rectStaysRect();<sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="class_s_o_u_i_1_1_s_matrix_1aa8b03a4303d5d76a14819cdd989210a2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_s_o_u_i_1_1_s_matrix_1aa8b03a4303d5d76a14819cdd989210a2" kindref="member">hasPerspective</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SToBool(this-&gt;getPerspectiveTypeMaskOnly()<sp/>&amp;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kPerspective_Mask);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isSimilarity(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>SK_ScalarNearlyZero)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>preservesRightAngles(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>SK_ScalarNearlyZero)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kAScaleX,</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kASkewY,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kASkewX,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kAScaleY,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kATransX,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kATransY</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>operator[](</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SASSERT((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)index<sp/>&lt;<sp/>9);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fMat[index];</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>get(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SASSERT((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)index<sp/>&lt;<sp/>9);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fMat[index];</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&amp;<sp/>operator[](</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SASSERT((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)index<sp/>&lt;<sp/>9);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;setTypeMask(kUnknown_Mask);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fMat[index];</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SASSERT((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)index<sp/>&lt;<sp/>9);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fMat[index]<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;setTypeMask(kUnknown_Mask);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset();</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>alias<sp/>for<sp/>reset()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setIdentity()<sp/>{<sp/>this-&gt;reset();<sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTranslate(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dx,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dy);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTranslate(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SVector2D&amp;<sp/>v)<sp/>{<sp/>this-&gt;setTranslate(v.fX,<sp/>v.fY);<sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setScale(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sx,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sy,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>px,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>py);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setScale(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sx,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sy);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>setIDiv(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>divx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>divy);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setRotate(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>degrees,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>px,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>py);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setRotate(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>degrees);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSinCos(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sinValue,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cosValue,</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>px,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>py);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSinCos(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sinValue,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cosValue);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSkew(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>kx,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ky,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>px,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>py);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSkew(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>kx,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ky);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setConcat(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SMatrix&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SMatrix&amp;<sp/>b);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>preTranslate(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dx,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dy);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>preTranslate(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dy);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>preScale(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sx,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sy,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>px,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>py);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>preScale(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sx,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sy);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>preRotate(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>degrees,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>px,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>py);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>preRotate(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>degrees);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>preSkew(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>kx,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ky,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>px,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>py);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>preSkew(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>kx,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ky);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>preConcat(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SMatrix&amp;<sp/>other);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>postTranslate(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dx,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dy);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>postTranslate(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dy);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>postScale(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sx,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sy,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>px,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>py);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>postScale(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sx,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sy);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>postIDiv(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>divx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>divy);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>postRotate(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>degrees,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>px,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>py);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>postRotate(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>degrees);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>postSkew(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>kx,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ky,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>px,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>py);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>postSkew(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>kx,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ky);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>postConcat(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SMatrix&amp;<sp/>other);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314" refid="class_s_o_u_i_1_1_s_matrix_1a21d4466c2cc3e20b127f0cc4a0949ccb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="class_s_o_u_i_1_1_s_matrix_1a21d4466c2cc3e20b127f0cc4a0949ccb" kindref="member">ScaleToFit</ref><sp/>{</highlight></codeline>
<codeline lineno="319" refid="class_s_o_u_i_1_1_s_matrix_1a21d4466c2cc3e20b127f0cc4a0949ccba0434db34583aa765219329375a441ec5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_o_u_i_1_1_s_matrix_1a21d4466c2cc3e20b127f0cc4a0949ccba0434db34583aa765219329375a441ec5" kindref="member">kFill_ScaleToFit</ref>,</highlight></codeline>
<codeline lineno="326" refid="class_s_o_u_i_1_1_s_matrix_1a21d4466c2cc3e20b127f0cc4a0949ccbafdb5bb1cb6f1504d655763956e070e04" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_o_u_i_1_1_s_matrix_1a21d4466c2cc3e20b127f0cc4a0949ccbafdb5bb1cb6f1504d655763956e070e04" kindref="member">kStart_ScaleToFit</ref>,</highlight></codeline>
<codeline lineno="332" refid="class_s_o_u_i_1_1_s_matrix_1a21d4466c2cc3e20b127f0cc4a0949ccba71e4b12decbd396fba65d72a6c328511" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_o_u_i_1_1_s_matrix_1a21d4466c2cc3e20b127f0cc4a0949ccba71e4b12decbd396fba65d72a6c328511" kindref="member">kCenter_ScaleToFit</ref>,</highlight></codeline>
<codeline lineno="339" refid="class_s_o_u_i_1_1_s_matrix_1a21d4466c2cc3e20b127f0cc4a0949ccba4de0a4e7ae39f6e73a06de8e62d6d6a1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kEnd_ScaleToFit</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>setRectToRect(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_s_o_u_i_1_1_s_rect" kindref="compound">SRect</ref>&amp;<sp/>src,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_s_o_u_i_1_1_s_rect" kindref="compound">SRect</ref>&amp;<sp/>dst,<sp/>ScaleToFit<sp/>stf);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>setPolyToPoly(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_s_o_u_i_1_1_s_point" kindref="compound">SPoint</ref><sp/>src[],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_s_o_u_i_1_1_s_point" kindref="compound">SPoint</ref><sp/>dst[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="365" refid="class_s_o_u_i_1_1_s_matrix_1a30902c44709d1a75786a261348d18ffb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_s_o_u_i_1_1_s_matrix_1a30902c44709d1a75786a261348d18ffb" kindref="member">invert</ref>(<ref refid="class_s_o_u_i_1_1_s_matrix" kindref="compound">SMatrix</ref>*<sp/>inverse)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allow<sp/>the<sp/>trivial<sp/>case<sp/>to<sp/>be<sp/>inlined.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;isIdentity())<sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inverse)<sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inverse-&gt;<ref refid="class_s_o_u_i_1_1_s_matrix_1a71ca6a752391cdeb141b1f1126c66da0" kindref="member">reset</ref>();</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;invertNonIdentity(inverse);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetAffineIdentity(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>affine[6]);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>asAffine(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>affine[6])<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mapPoints(<ref refid="struct_s_o_u_i_1_1_s_point" kindref="compound">SPoint</ref><sp/>dst[],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_s_o_u_i_1_1_s_point" kindref="compound">SPoint</ref><sp/>src[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="409" refid="class_s_o_u_i_1_1_s_matrix_1a69e657d90fce24375cec63789f93a0d1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_o_u_i_1_1_s_matrix_1a69e657d90fce24375cec63789f93a0d1" kindref="member">mapPoints</ref>(<ref refid="struct_s_o_u_i_1_1_s_point" kindref="compound">SPoint</ref><sp/>pts[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;mapPoints(pts,<sp/>pts,<sp/>count);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="416" refid="class_s_o_u_i_1_1_s_matrix_1a5882236a7bd6f8a731cd69fed49ec424" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_o_u_i_1_1_s_matrix_1a5882236a7bd6f8a731cd69fed49ec424" kindref="member">mapPointsWithStride</ref>(<ref refid="struct_s_o_u_i_1_1_s_point" kindref="compound">SPoint</ref><sp/>pts[],<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>stride,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SASSERT(stride<sp/>&gt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_o_u_i_1_1_s_point" kindref="compound">SPoint</ref>));</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SASSERT(0<sp/>==<sp/>stride<sp/>%<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>count;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;mapPoints(pts,<sp/>pts,<sp/>1);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pts<sp/>=<sp/>(<ref refid="struct_s_o_u_i_1_1_s_point" kindref="compound">SPoint</ref>*)((intptr_t)pts<sp/>+<sp/>stride);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="427" refid="class_s_o_u_i_1_1_s_matrix_1a76d1c4074efa41322aa3d8526d6b7c2c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_o_u_i_1_1_s_matrix_1a76d1c4074efa41322aa3d8526d6b7c2c" kindref="member">mapPointsWithStride</ref>(<ref refid="struct_s_o_u_i_1_1_s_point" kindref="compound">SPoint</ref><sp/>dst[],<sp/><ref refid="struct_s_o_u_i_1_1_s_point" kindref="compound">SPoint</ref><sp/>src[],</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>stride,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SASSERT(stride<sp/>&gt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_o_u_i_1_1_s_point" kindref="compound">SPoint</ref>));</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SASSERT(0<sp/>==<sp/>stride<sp/>%<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>count;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;mapPoints(dst,<sp/>src,<sp/>1);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src<sp/>=<sp/>(<ref refid="struct_s_o_u_i_1_1_s_point" kindref="compound">SPoint</ref>*)((intptr_t)src<sp/>+<sp/>stride);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst<sp/>=<sp/>(<ref refid="struct_s_o_u_i_1_1_s_point" kindref="compound">SPoint</ref>*)((intptr_t)dst<sp/>+<sp/>stride);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mapHomogeneousPoints(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dst[],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>src[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mapXY(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y,<sp/><ref refid="struct_s_o_u_i_1_1_s_point" kindref="compound">SPoint</ref>*<sp/>result)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SASSERT(result);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;getMapXYProc()(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>x,<sp/>y,<sp/>result);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mapVectors(SVector2D<sp/>dst[],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SVector2D<sp/>src[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="475" refid="class_s_o_u_i_1_1_s_matrix_1abc59a21213dded17bca71273152774a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_o_u_i_1_1_s_matrix_1abc59a21213dded17bca71273152774a0" kindref="member">mapVectors</ref>(<ref refid="struct_s_o_u_i_1_1_s_point" kindref="compound">SVector2D</ref><sp/>vecs[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;mapVectors(vecs,<sp/>vecs,<sp/>count);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mapRect(<ref refid="struct_s_o_u_i_1_1_s_rect" kindref="compound">SRect</ref>*<sp/>dst,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_s_o_u_i_1_1_s_rect" kindref="compound">SRect</ref>&amp;<sp/>src)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="494" refid="class_s_o_u_i_1_1_s_matrix_1a4fe2690d08e8536f8e0ad614bc94f26a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_s_o_u_i_1_1_s_matrix_1a4fe2690d08e8536f8e0ad614bc94f26a" kindref="member">mapRect</ref>(<ref refid="struct_s_o_u_i_1_1_s_rect" kindref="compound">SRect</ref>*<sp/>rect)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;mapRect(rect,<sp/>*rect);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="504" refid="class_s_o_u_i_1_1_s_matrix_1afc5f73a3a1b84f4bbaac94381de5c1fa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_o_u_i_1_1_s_matrix_1afc5f73a3a1b84f4bbaac94381de5c1fa" kindref="member">mapRectToQuad</ref>(<ref refid="struct_s_o_u_i_1_1_s_point" kindref="compound">SPoint</ref><sp/>dst[4],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_s_o_u_i_1_1_s_rect" kindref="compound">SRect</ref>&amp;<sp/>rect)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>could<sp/>potentially<sp/>be<sp/>faster<sp/>if<sp/>we<sp/>only<sp/>transformed<sp/>each<sp/>x<sp/>and<sp/>y<sp/>of<sp/>the<sp/>rect<sp/>once.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rect.<ref refid="struct_s_o_u_i_1_1_s_rect_1a9c87214167ddbc8b5cd19ceb299df431" kindref="member">toQuad</ref>(dst);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;mapPoints(dst,<sp/>4);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>mapRadius(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>radius)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*MapXYProc)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_o_u_i_1_1_s_matrix" kindref="compound">SMatrix</ref>&amp;<sp/>mat,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y,</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_s_o_u_i_1_1_s_point" kindref="compound">SPoint</ref>*<sp/>result);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>MapXYProc<sp/>GetMapXYProc(TypeMask<sp/>mask)<sp/>{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SASSERT((mask<sp/>&amp;<sp/>~kAllMasks)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gMapXYProcs[mask<sp/>&amp;<sp/>kAllMasks];</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>MapXYProc<sp/>getMapXYProc()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetMapXYProc(this-&gt;getType());</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*MapPtsProc)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SMatrix&amp;<sp/>mat,<sp/>SPoint<sp/>dst[],</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SPoint<sp/>src[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>MapPtsProc<sp/>GetMapPtsProc(TypeMask<sp/>mask)<sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SASSERT((mask<sp/>&amp;<sp/>~kAllMasks)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gMapPtsProcs[mask<sp/>&amp;<sp/>kAllMasks];</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>MapPtsProc<sp/>getMapPtsProc()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetMapPtsProc(this-&gt;getType());</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="548" refid="class_s_o_u_i_1_1_s_matrix_1a722fe2222010b4a0279363dc3b8d294d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_s_o_u_i_1_1_s_matrix_1a722fe2222010b4a0279363dc3b8d294d" kindref="member">cheapEqualTo</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_o_u_i_1_1_s_matrix" kindref="compound">SMatrix</ref>&amp;<sp/>m)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0<sp/>==<sp/>memcmp(fMat,<sp/>m.fMat,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(fMat));</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>writeTo/readFromMemory<sp/>will<sp/>never<sp/>return<sp/>a<sp/>value<sp/>larger<sp/>than<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kMaxFlattenSize<sp/>=<sp/>9<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(float)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t)</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>getMinScale()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>getMaxScale()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>getMinMaxScales(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scaleFactors[2])<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SMatrix&amp;<sp/>I();</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SMatrix&amp;<sp/>InvalidMatrix();</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="594" refid="class_s_o_u_i_1_1_s_matrix_1a609130bd43295954ee8048bd46c6ed57" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_s_o_u_i_1_1_s_matrix" kindref="compound">SMatrix</ref><sp/><ref refid="class_s_o_u_i_1_1_s_matrix_1a609130bd43295954ee8048bd46c6ed57" kindref="member">Concat</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_o_u_i_1_1_s_matrix" kindref="compound">SMatrix</ref>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_o_u_i_1_1_s_matrix" kindref="compound">SMatrix</ref>&amp;<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_o_u_i_1_1_s_matrix" kindref="compound">SMatrix</ref><sp/>result;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="class_s_o_u_i_1_1_s_matrix_1a3dbb666084099b102982142f47e79d26" kindref="member">setConcat</ref>(a,<sp/>b);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="604" refid="class_s_o_u_i_1_1_s_matrix_1af78473cc65c33ab36eb65f1ddc8eeeb0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_o_u_i_1_1_s_matrix_1af78473cc65c33ab36eb65f1ddc8eeeb0" kindref="member">dirtyMatrixTypeCache</ref>()<sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;setTypeMask(kUnknown_Mask);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kRectStaysRect_Mask<sp/>=<sp/>0x10,</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kOnlyPerspectiveValid_Mask<sp/>=<sp/>0x40,</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kUnknown_Mask<sp/>=<sp/>0x80,</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kORableMasks<sp/>=<sp/><sp/>kTranslate_Mask<sp/>|</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kScale_Mask<sp/>|</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kAffine_Mask<sp/>|</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kPerspective_Mask,</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kAllMasks<sp/>=<sp/>kTranslate_Mask<sp/>|</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kScale_Mask<sp/>|</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kAffine_Mask<sp/>|</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kPerspective_Mask<sp/>|</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kRectStaysRect_Mask</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fMat[9];</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/>uint32_t<sp/>fTypeMask;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>computeTypeMask()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>computePerspectiveTypeMask()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTypeMask(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mask);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>orTypeMask(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mask);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clearTypeMask(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mask)<sp/>{</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>allow<sp/>a<sp/>valid<sp/>mask</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SASSERT((mask<sp/>&amp;<sp/>kAllMasks)<sp/>==<sp/>mask);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fTypeMask<sp/>=<sp/>fTypeMask<sp/>&amp;<sp/>~mask;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>TypeMask<sp/>getPerspectiveTypeMaskOnly()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((fTypeMask<sp/>&amp;<sp/>kUnknown_Mask)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!(fTypeMask<sp/>&amp;<sp/>kOnlyPerspectiveValid_Mask))<sp/>{</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fTypeMask<sp/>=<sp/>this-&gt;computePerspectiveTypeMask();</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(TypeMask)(fTypeMask<sp/>&amp;<sp/>0xF);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isTriviallyIdentity()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fTypeMask<sp/>&amp;<sp/>kUnknown_Mask)<sp/>{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((fTypeMask<sp/>&amp;<sp/>0xF)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/>invertNonIdentity(SMatrix*<sp/>inverse)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Poly2Proc(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SPoint[],<sp/>SMatrix*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SPoint&amp;<sp/>scale);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Poly3Proc(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SPoint[],<sp/>SMatrix*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SPoint&amp;<sp/>scale);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Poly4Proc(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SPoint[],<sp/>SMatrix*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SPoint&amp;<sp/>scale);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Identity_xy(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SMatrix&amp;,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">,<sp/>SPoint*);</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Trans_xy(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SMatrix&amp;,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">,<sp/>SPoint*);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Scale_xy(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SMatrix&amp;,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">,<sp/>SPoint*);</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ScaleTrans_xy(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SMatrix&amp;,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">,<sp/>SPoint*);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Rot_xy(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SMatrix&amp;,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">,<sp/>SPoint*);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RotTrans_xy(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SMatrix&amp;,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">,<sp/>SPoint*);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Persp_xy(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SMatrix&amp;,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">,<sp/>SPoint*);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MapXYProc<sp/>gMapXYProcs[];</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Identity_pts(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SMatrix&amp;,<sp/>SPoint[],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SPoint[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Trans_pts(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SMatrix&amp;,<sp/>SPoint<sp/>dst[],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SPoint[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Scale_pts(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SMatrix&amp;,<sp/>SPoint<sp/>dst[],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SPoint[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ScaleTrans_pts(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SMatrix&amp;,<sp/>SPoint<sp/>dst[],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SPoint[],</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Rot_pts(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SMatrix&amp;,<sp/>SPoint<sp/>dst[],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SPoint[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RotTrans_pts(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SMatrix&amp;,<sp/>SPoint<sp/>dst[],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SPoint[],</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Persp_pts(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SMatrix&amp;,<sp/>SPoint<sp/>dst[],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SPoint[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MapPtsProc<sp/>gMapPtsProcs[];</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SkPerspIter;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>SFloatSinCos(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>radians,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>cosValue);</highlight></codeline>
<codeline lineno="702"><highlight class="normal">};</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal">}</highlight><highlight class="comment">//end<sp/>of<sp/>namespace<sp/>SOUI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="H:/OpenSourcesCode/soui3/SOUI/include/matrix/SMatrix.h"/>
  </compounddef>
</doxygen>
